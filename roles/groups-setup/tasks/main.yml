# Logic for adding nodes:
# Control plane nodes has is_master_node = true
- name: Check if etcdctl exists
  stat:
    path: "{{ bin_dir }}/etcdctl"
  register: etcdctl_stat

- name: Install etcdctl
  command: go get -u github.com/coreos/etcd/etcdctl
  environment:
    GOBIN: "{{ bin_dir }}"
  when: not etcdctl_stat.stat.exists

- name: Get control plane nodes from etcd
  command: >-
    {{ bin_dir }}/etcdctl member list
    --cacert {{ etcd_cert_dir }}/ca.crt
    --cert {{ etcd_cert_dir }}/etcdctl-etcd-client.crt
    --key {{ etcd_cert_dir }}/etcdctl-etcd-client.key
    {% if first_node is defined and first_node != "" %}
    --endpoints https://{{ first_node }}:2379
    {% else %}
    --endpoints https://{{ ip | default(ansible_default_ipv4['address']) }}:2379
    {% endif %}
    -w json
  environment:
    ETCDCTL_API: 3
  register: etcd_member_list
  failed_when: false

- name: Add first_node first to ensure order
  add_host:
    hostname: "{{ item.name }}"
    ip: "{{ item.peerURLs[0] | regex_replace('^.*://([^:]*):[0-9]+', '\\1') }}"
    groups:
      - etcd
      - kube-master
      - k8s-cluster
  with_items: "{{ (etcd_member_list.stdout | default('[]', true) | from_json).members  }}"
  when:
    - etcd_member_list is defined
    - etcd_member_list.rc == 0
    - first_node == item.peerURLs[0] | regex_replace('^.*://([^:]*):[0-9]+', '\\1')

- name: Add other nodes based on etcd member list
  add_host:
    hostname: "{{ item.name }}"
    ip: "{{ item.peerURLs[0] | regex_replace('^.*://([^:]*):[0-9]+', '\\1') }}"
    groups:
      - etcd
      - kube-master
      - k8s-cluster
  with_items: "{{ (etcd_member_list.stdout | default('[]', true) | from_json).members  }}"
  when:
    - etcd_member_list is defined
    - etcd_member_list.rc == 0
    - first_node != item.peerURLs[0] | regex_replace('^.*://([^:]*):[0-9]+', '\\1')

- name: Add self as etcd+master
  add_host:
    hostname: "{{ ansible_hostname }}"
    ip: "{{ ansible_default_ipv4['address'] }}"
    groups:
      - etcd
      - kube-master
      - k8s-cluster
  when:
    - is_master_node

- name: Add self as normal node
  add_host:
    hostname: "{{ ansible_hostname }}"
    ip: "{{ ansible_default_ipv4['address'] }}"
    groups:
      - kube-node
      - k8s-cluster
  when:
    - not is_master_node

# Uncomment below lines for testing node order
#- name: debug
#  debug:
#    msg: "{{ groups['kube-master'] }}"
#- name: debug
#  debug:
#    msg: "{{ groups['kube-master'][0] }}"
#
#- fail:
